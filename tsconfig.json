{
  "compilerOptions": {
    "target": "esnext" /* 発行されたJavaScriptのJavaScript言語バージョンを設定し、互換性のあるライブラリ宣言を含めます */,
    "jsx": "react" /* 生成されるJSXコードを指定します */,
    "module": "commonjs" /* 生成されるモジュールコードを指定します */,
    "moduleResolution": "node" /* TypeScriptが特定のモジュール指定子からファイルを検索する方法を指定します */,
    "noEmit": true /* コンパイルからのファイルの発行を無効にする */,
    "isolatedModules": true /* 他のインポートに依存することなく、各ファイルを安全にトランスパイルできることを確認してください */,
    "allowSyntheticDefaultImports": true /* モジュールにデフォルトのエクスポートがない場合は、「import x from y」を許可します。 */,
    "esModuleInterop": true /* CommonJSモジュールのインポートのサポートを容易にするために、追加のJavaScriptを発行します。これにより、タイプの互換性のために `allowSyntheticDefaultImports`が有効になります */,
    "forceConsistentCasingInFileNames": true /* インポートのケーシングが正しいことを確認する */,
    "strict": true /* すべての厳密なタイプチェックオプションを有効にする */,
    "noImplicitAny": true /* 暗黙の `any`型を使用した式と宣言のエラーレポートを有効にします */,
    "strictNullChecks": true /* タイプチェックの際は、 `null`と` undefined`を考慮に入れてください */,
    "noUnusedLocals": true /* ローカル変数が読み取られない場合のエラーレポートを有効にします。 */,
    "noUnusedParameters": true /* 関数パラメータが読み取られないときにエラーを発生させる */,
    "noImplicitReturns": true /* 関数で明示的に返されないコードパスのエラーレポートを有効にします。 */,
    "skipLibCheck": true /* すべての.d.tsファイルのタイプチェックをスキップします。 */
  },
  "include": ["src/**/*.ts", "src/**/*.tsx"],
  "exclude": ["node_modules", "src/__test__"]
}
